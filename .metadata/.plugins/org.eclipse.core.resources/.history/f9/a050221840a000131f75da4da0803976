<?php
ob_start();
require_once('../classes/Turtle.php');
require_once('../../FirePHPCore/FirePHP.class.php');

// Ein Objekt der Klasse FirePHP erzeugen
$firephp = FirePHP::getInstance(true);
$firephp->setEnabled(true);

$imgWidth= 600;
$imgHeight = 600;
// Im Arbeitsspeicher des Servers ein Bild erzeugen:
$img = imagecreatetruecolor($imgWidth, $imgHeight);
$firephp->log($img);

// Eine Farbe in der Farbpalette des Bildes definieren
$hintergrund = imagecolorallocate($img, 248,248,248);

// Mit der eben definierten Farbe das gesamte Bild auffuellen
imagefill($img, 0, 0, $hintergrund);

// Erzeugen Sie hier ein neues Objekt der Klasse Turtle
// und weisen Sie es einer Variable zu.
// Vergessen Sie nicht, die Methode penDown() aufzurufen,
// damit die Turtle nicht nur "geht", sondern auch
// sichtbare Spuren hinterlaesst.
$turtle=new Turtle ($img, 400, 400);
$turtle->penDown();

// wurde anzahlEcken, anzahlZeilen und seitenLaenge schon angegeben?
// Machen Sie die gesamte Programm-Ausfuehrung davon abhaengig.
// Informieren Sie sich auf http://php.net ueber die Function empty()
// und ihr Verhalten gegenueber ungesetzten Array-Elementen.
$ecken = "";
$zeilen="";
$laenge="";

if(empty($_POST["anzahlEcken"])
	&&(empty($_POST["anzahlZeilen"]))
		&&(empty($_POST["seitenLaenge"]))){

	print("Bitte Werte in jedes Feld eingeben.");
}
elseif($_POST["anzahlEcken"]<3&&$_POST["anzahlEcken"]>0){
	print("Ein Vieleck besteht aus mindestens 3 Ecken.");
}

/*
 * Kommentar von Sif:
 * Hier stellen sich die gleichen Fragen wie zu Ihrem Programm
 * vieleckstern.
 */

else{
	$ecken = $_POST["anzahlEcken"];
	$zeilen = $_POST["anzahlZeilen"];
	$laenge= $_POST["seitenLaenge"];
}


// Das Element 'abstand' von $_POST koennen Sie anders behandeln:
// Wenn es ein leerer String ist, wird es einfach als 0 interpretiert.
// Der Wert 0 wird von empty() ausgeschlossen, soll aber doch moeglich sein.

$firephp->log($_POST);

$abstand=$_POST["abstand"];
if($_POST["abstand"]="") { 
	$abstand = 0;// Sie muessen natuerlich "true" durch Ihre Bedingung ersetzen ;-)
}

//Wieso funktioniert folgendes nicht?
//else{
	//$abstand= $_POST["abstand"];
//}



	// Weisen Sie zuerst die Elementen von $_POST Variablen zu, die 
	// leichter zu schreiben sind ;-)

	// Lassen Sie die Turtle zu einem bestimmten Anfangspunkt springen.
	// Zum Anordnen der Vielecke in einem Dreieck brauchen Sie 
	// zwei Schleifen, die ineinander geschachtelt sind:
	// eine Schleife, die die Zeilen erzeugt und fuer jede Zeile
	// eine Schleife, die die einzelnen Vielecke erzeugt.
	// Alle benoetigten Groessen erhalten Sie aus dem Array $_POST
	// (bzw. aus den Variablen, die Sie oben deklariert haben).
	$x=50;;
	$y=50;
	$turtle->jumpto($x,$y);
	for($zaehlerZeile=0;$zaehlerZeile<$zeilen;$zaehlerZeile++){
		for($zaehlerFigur=0; $zaehlerFigur<($zeilen-$zaehlerZeile);$zaehlerFigur++){
			vieleck($turtle,$ecken,$laenge);
			$x=$x+$laenge;
			$turtle->jumpto($x,$y);
		} 
		$x = $x-$laenge*($zeilen-($zaehlerZeile+1))-$laenge/2;
		$y=$y+$laenge+$abstand;
		$turtle->jumpto($x,$y);
	}
	
	
	/*
	 * Kommentar von Sif
	 * Ihr Programm erzeugt, wenn man z.B. 6-Ecke zeichen laesst,
	 * eine Figur, bei der sich die 6-Ecke horizontal ueberlappen,
	 * vertikal aber durch den eingegebenen Abstand voneinander getrennt sind.
	 * Weshalb ist das so?
	 */
	



// Hierher koennen Sie Ihre Funktion vieleck kopieren, die Sie schon programmiert
// haben.
function vieleck ($turtle, $ecken, $laenge){
	$i = 0;
	while($i < $ecken){
		$turtle->forward($laenge);
		$turtle->turn(360/$ecken);
		$i++;
	}

}




// Schliesslich schreiben wir das fertige Bild
// aus dem Arbeitsspeicher auf die Festplatte.
// Von dort wird es danach im HTML-Code eingebunden.
// Sie sehen im Body den <img>-Tag, der dazu dient.
imagepng($img, "../images/bild2.png");




?>


<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Kerem Taktaks super Dreiecksfigur aus Vielecken</title>
<link rel="stylesheet" href="../stylesheets/styles_schleife1.css" />
</head>
<body>
	<h1>Ein Dreieck aus vielen Vielecken</h1>
	<form action="" method="post">
		<p>
			<label for="anzahlEcken">Anzahl Ecken: </label> <input type="text"
				name="anzahlEcken" />
		</p>
		<p>
			<label for="anzahlZeilen">Anzahl Zeilen: </label> <input
				type="text" name="anzahlZeilen" />
		</p>
		
		<p>
			<label for="seitenLaenge">Seitenl&auml;nge: </label> <input
				type="number" name="seitenLaenge" />
		</p>
		<p>
			<label for="abstand">Abstand </label> <input
				type="number" name="abstand" />
		</p>
		<p>
			<label for="zeichnen">Figur zeichnen!</label> <input type="submit"
				name="zeichnen" />
		</p>
	</form>
	<img src="../images/bild2.png" />
</body>
</html>
