<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.8.5">
  <partials/>
  <file path="Turtle2.php" generated-path="Turtle2.html" hash="be46e4c54423643214ff5bc56f0fbede" package="classes">
    <docblock line="0">
      <description>This file contains the Turtle class
intended for turtle graphic programming
in php.</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Hanspeter Siegfried, kzo.ch"/>
      <tag name="version" line="0" description="0.1"/>
      <tag name="package" line="0" description="classes"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="classes">
      <extends/>
      <name>Turtle</name>
      <full_name>\Turtle</full_name>
      <docblock line="24">
        <description>Class Turtle
Intended for educational purpose.</description>
        <long-description>With a turtle object you can program turtle graphics in php
and draw them on a gd image.</long-description>
        <tag name="author" line="24" description="Hanspeter Siegfried, KZO, CH-8620 Wetzikon"/>
        <tag name="version" line="24" description="1.2.0"/>
        <tag name="Todo" line="24" description="Bei sehr kleinen Drehwinkeln wird offenbar falsch gerundet."/>
        <tag name="package" line="24" description="classes"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="31" package="classes">
        <name>$imageHandle</name>
        <full_name>\Turtle::imageHandle</full_name>
        <default></default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="31" description="&lt;p&gt;An image resource object returned&#10;by the function imagecreatetruecolor().&lt;/p&gt;" type="\GD-Image-Handle" variable="$imageHandle">
            <type>\GD-Image-Handle</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="38" package="classes">
        <name>$imageWidth</name>
        <full_name>\Turtle::imageWidth</full_name>
        <default></default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;The width of the image handled by the image resource &#10;passed to the constructor&lt;/p&gt;" type="integer" variable="$imageWidth">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="44" package="classes">
        <name>$imageHeight</name>
        <full_name>\Turtle::imageHeight</full_name>
        <default></default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="44" description="&lt;p&gt;The height of the image ... @see @var $imagewidth&lt;/p&gt;" type="integer" variable="$imageHeight">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="50" package="classes">
        <name>$xPos</name>
        <full_name>\Turtle::xPos</full_name>
        <default></default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="50" description="&lt;p&gt;the turtle's current x-position&lt;/p&gt;" type="float" variable="$xPos">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="56" package="classes">
        <name>$yPos</name>
        <full_name>\Turtle::yPos</full_name>
        <default></default>
        <docblock line="56">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="56" description="&lt;p&gt;the turtle's current y-position&lt;/p&gt;" type="float" variable="$yPos">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="62" package="classes">
        <name>$penColor</name>
        <full_name>\Turtle::penColor</full_name>
        <default></default>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="62" description="&lt;p&gt;A color identifier usable for the GD image object, representing the actual pen color.&lt;/p&gt;" type="integer" variable="$penColor">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="68" package="classes">
        <name>$penWidth</name>
        <full_name>\Turtle::penWidth</full_name>
        <default></default>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="68" description="&lt;p&gt;The pen's width in pixels&lt;/p&gt;" type="integer" variable="$penWidth">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="classes">
        <name>$angle</name>
        <full_name>\Turtle::angle</full_name>
        <default></default>
        <docblock line="74">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="74" description="&lt;p&gt;The turtle's current heading in radians&lt;/p&gt;" type="float" variable="$angle">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="80" package="classes">
        <name>$isPenDown</name>
        <full_name>\Turtle::isPenDown</full_name>
        <default></default>
        <docblock line="80">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="80" description="&lt;p&gt;Whether the turtle's pen is currently down or not.&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="classes">
        <name>__construct</name>
        <full_name>\Turtle::__construct()</full_name>
        <docblock line="91">
          <description>Constructor method</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;An image resource identifier returned by&#10;the function imagecreatetruecolor() or imagecreate()&lt;/p&gt;" type="resource" variable="$imageHandle">
            <type>resource</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$imageHandle</name>
          <default></default>
          <type>resource</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="classes">
        <name>getPenColor</name>
        <full_name>\Turtle::getPenColor()</full_name>
        <docblock line="119">
          <description>Returns the color identifier (an integer) of the turtle's pen color.</description>
          <long-description>This color identifier can be used as argument for any draw function
applied directly to the image resource.</long-description>
          <tag name="return" line="119" description="the color identifier of the turtle's current pen color&#10;(compatible to PHP's GD image functions)" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="129" package="classes">
        <name>getPenRed</name>
        <full_name>\Turtle::getPenRed()</full_name>
        <docblock line="129">
          <description>Returns the amount of red in the turtle's pen color.</description>
          <long-description></long-description>
          <tag name="return" line="129" description="An integer between 0 and 255 meaning the amount of red in&#10;the turtle's pen color" type="\integer:">
            <type>\integer:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="classes">
        <name>getPenGreen</name>
        <full_name>\Turtle::getPenGreen()</full_name>
        <docblock line="139">
          <description>Returns the amount of green in the turtle's pen color.</description>
          <long-description></long-description>
          <tag name="return" line="139" description="An integer between 0 and 255 meaning the amount of green&#10;in the turtle's pen color" type="\integer:">
            <type>\integer:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="classes">
        <name>getPenBlue</name>
        <full_name>\Turtle::getPenBlue()</full_name>
        <docblock line="149">
          <description>Returns the amount of blue in the turtle's pen color</description>
          <long-description></long-description>
          <tag name="return" line="149" description="An integer between 0 and 255 meaning the amount of blue&#10;in the turtle's pen color" type="\integer:">
            <type>\integer:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="158" package="classes">
        <name>getPenWidth</name>
        <full_name>\Turtle::getPenWidth()</full_name>
        <docblock line="158">
          <description>Returns the width of the turtle's pen as an integer (in pixels)</description>
          <long-description></long-description>
          <tag name="return" line="158" description="the current width of the turtle's pen (in pixels)" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="167" package="classes">
        <name>isPenDown</name>
        <full_name>\Turtle::isPenDown()</full_name>
        <docblock line="167">
          <description>Returns the information, whether the turtle's pen is currently down.</description>
          <long-description></long-description>
          <tag name="return" line="167" description="Whether the turtle's pen is currently down or not." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="classes">
        <name>getX</name>
        <full_name>\Turtle::getX()</full_name>
        <docblock line="176">
          <description>Returns the turtle's current x ordinate.</description>
          <long-description></long-description>
          <tag name="return" line="176" description="The turtle's current x-position" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="classes">
        <name>getY</name>
        <full_name>\Turtle::getY()</full_name>
        <docblock line="185">
          <description>Returns the turtle's current y ordinate</description>
          <long-description></long-description>
          <tag name="return" line="185" description="The turtle's current y-position" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="196" package="classes">
        <name>setPenColor</name>
        <full_name>\Turtle::setPenColor()</full_name>
        <docblock line="196">
          <description>Sets the turtle's pen color.</description>
          <long-description></long-description>
          <tag name="param" line="196" description="&lt;p&gt;The amount of red (decimal number between 0 and 250)&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;The amount of green (decimal number between 0 and 250)&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;The amount of blue (decimal number between 0 and 250)&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="206" package="classes">
        <name>setPenWidth</name>
        <full_name>\Turtle::setPenWidth()</full_name>
        <docblock line="206">
          <description>Sets the width of the turtle's pen.</description>
          <long-description></long-description>
          <tag name="param" line="206" description="&lt;p&gt;The new width of the turtle's pen. In Pixels.&lt;/p&gt;" type="integer" variable="$penWidth">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$penWidth</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="216" package="classes">
        <name>penDown</name>
        <full_name>\Turtle::penDown()</full_name>
        <docblock line="216">
          <description>Puts the turtle's pen onto the canvas.</description>
          <long-description></long-description>
          <tag name="return" line="216" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="225" package="classes">
        <name>penUp</name>
        <full_name>\Turtle::penUp()</full_name>
        <docblock line="225">
          <description>Takes the turtle's pen off the canvas.</description>
          <long-description></long-description>
          <tag name="return" line="225" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="235" package="classes">
        <name>forward</name>
        <full_name>\Turtle::forward()</full_name>
        <docblock line="235">
          <description>Lets the turtle go forward (in the direction of its current heading). The argument passed
is the desired distance in pixels.</description>
          <long-description></long-description>
          <tag name="param" line="235" description="&lt;p&gt;moves the turtle for the distance passed as argument (in pixels)&lt;/p&gt;" type="float" variable="$strecke">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$strecke</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="266" package="classes">
        <name>setAngle</name>
        <full_name>\Turtle::setAngle()</full_name>
        <docblock line="266">
          <description>Sets the turtle's heading. The argument passed is an integer meaning degrees.</description>
          <long-description></long-description>
          <tag name="param" line="266" description="&lt;p&gt;The new heading of the turtle. In degrees&lt;/p&gt;" type="float" variable="$newAngleDegrees">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$newAngleDegrees</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="275" package="classes">
        <name>turn</name>
        <full_name>\Turtle::turn()</full_name>
        <docblock line="275">
          <description>Lets the turtle turn right by an angle (in degrees) passed as argument.</description>
          <long-description>An integer below zero lets it turn left.</long-description>
          <tag name="param" line="275" description="&lt;p&gt;The angle to turn. In degrees.&lt;/p&gt;" type="float" variable="$angleDegrees">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$angleDegrees</name>
          <default></default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="286" package="classes">
        <name>jumpTo</name>
        <full_name>\Turtle::jumpTo()</full_name>
        <docblock line="286">
          <description>Lets the turtle jump to a new place
With this method the turtle moves without drawing, even if it's pen is down.</description>
          <long-description></long-description>
          <tag name="param" line="286" description="&lt;p&gt;The new x-position&lt;/p&gt;" type="integer" variable="$newX">
            <type>integer</type>
          </tag>
          <tag name="param" line="286" description="&lt;p&gt;The new y-position&lt;/p&gt;" type="integer" variable="$newY">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$newX</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newY</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <package name="classes" full_name="classes"/>
  <package name="global" full_name="global"/>
  <namespace name="global" full_name="global"/>
  <deprecated count="0"/>
</project>
